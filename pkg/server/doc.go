package server

/*

Server package implement a server that can be used to fake the APIServer and etcd running
in the workload clusters; the implementation is designed specifically to make Cluster API
and the Kubeadm Control Plane provider happy during a stress test (it is not complete or
production ready, and it will never be).

There are many factors shaping the implementation.

- The server has to be able to serve requests for many workload clusters.
- The server has to serve all kind of request CAPI core controllers and the kubeadm
  control plane controller are sending to workload clusters
- Among those request there are also two port-forward requests, one targeting the
  kube-apiserver pods, the other the etcd pods generated by kubeadm. The server needs
  being able to act as a target for those requests too (it will port forward to itself).
- The server needs to comply to CAPI contract, e.g. the control plane endpoint is in the
  for of host:port, the port is allocated first but the server start answering later when
  the first CP instance comes up etc.

The implementation is inspired from https://fideloper.com/golang-proxy-multiple-listeners
(kudos to the author!), and it consist of a server that has support for multiplexing request for
many workload clusters, each one with it's own host:port listener, to a single handler/backed
implementation.

*/
